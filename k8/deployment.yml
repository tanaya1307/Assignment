---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: app-frontend  
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: frontend-build
              mountPath: /usr/share/nginx/html  

      volumes:
        - name: frontend-build
          emptyDir: {}  # Using emptyDir for ephemeral storage

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: app-backend  # Replace with your actual backend image
          ports:
            - containerPort: 5000

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:alpine  # Use a lightweight version of Nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf  # Mapping the nginx.conf to the default.conf location in Nginx container
              subPath: nginx.conf  # Ensure itâ€™s treated as a file
            - name: frontend-build
              mountPath: /usr/share/nginx/html  # Path where the frontend build files will be served from
      volumes:
        - name: nginx-config
          hostPath:
            path: /path/to/your/app/nginx.conf  # Adjust this to the path where your nginx.conf file is located
            type: File
        - name: frontend-build
          emptyDir: {}  # Using the same emptyDir for Nginx to access frontend build files
